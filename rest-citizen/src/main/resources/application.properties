quarkus.swagger-ui.always-include=true
NumberProxy/mp-rest/uri=http://localhost:8081/numbers

#Data sources
quarkus.datasource.db1.db-kind=mysql
quarkus.datasource.db1.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.db1.jdbc.url=jdbc:mysql://localhost:3306/db1?createDatabaseIfNotExist=true
quarkus.datasource.db1.username=root
quarkus.datasource.db1.password=root
quarkus.datasource.db1.jdbc.min-size=3
quarkus.datasource.db1.jdbc.max-size=10

quarkus.datasource.db2.db-kind=mysql
quarkus.datasource.db2.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.db2.jdbc.url=jdbc:mysql://localhost:3306/db2?createDatabaseIfNotExist=true
quarkus.datasource.db2.username=root
quarkus.datasource.db2.password=root
quarkus.datasource.db2.jdbc.min-size=3
quarkus.datasource.db2.jdbc.max-size=10

#Hibernate data sources
quarkus.datasource.db3.db-kind = mysql
quarkus.datasource.db3.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.db3.jdbc.url=jdbc:mysql://localhost:3306/db3?createDatabaseIfNotExist=true
quarkus.datasource.db3.username=root
quarkus.datasource.db3.password=root
quarkus.datasource.db3.jdbc.min-size=3
quarkus.datasource.db3.jdbc.max-size=10
quarkus.hibernate-orm.db3.dialect=org.hibernate.dialect.MySQL8Dialect
quarkus.hibernate-orm.db3.database.generation=update
quarkus.hibernate-orm.db3.datasource=db3
quarkus.hibernate-orm.db3.log.sql=true
quarkus.hibernate-orm.db3.packages=nash.demo.quarkus.entity.a

quarkus.datasource.db4.db-kind = mysql
quarkus.datasource.db4.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.db4.jdbc.url=jdbc:mysql://localhost:3306/db4?createDatabaseIfNotExist=true
quarkus.datasource.db4.username=root
quarkus.datasource.db4.password=root
quarkus.datasource.db4.jdbc.min-size=3
quarkus.datasource.db4.jdbc.max-size=10
quarkus.hibernate-orm.db4.dialect=org.hibernate.dialect.MySQL8Dialect
quarkus.hibernate-orm.db4.database.generation=update
quarkus.hibernate-orm.db4.datasource=db4
quarkus.hibernate-orm.db4.log.sql=true
quarkus.hibernate-orm.db4.packages=nash.demo.quarkus.entity.b

#Panache with mySql data source
quarkus.datasource.db5.db-kind = mysql
quarkus.datasource.db5.jdbc.driver=com.mysql.cj.jdbc.Driver
quarkus.datasource.db5.jdbc.url=jdbc:mysql://localhost:3306/db5?createDatabaseIfNotExist=true
quarkus.datasource.db5.username=root
quarkus.datasource.db5.password=root
quarkus.datasource.db5.jdbc.min-size=3
quarkus.datasource.db5.jdbc.max-size=10
quarkus.hibernate-orm.db5.dialect=org.hibernate.dialect.MySQL8Dialect
quarkus.hibernate-orm.db5.database.generation = update
quarkus.hibernate-orm.db5.datasource=db5
quarkus.hibernate-orm.db5.log.sql=true
quarkus.hibernate-orm.db5.packages=nash.demo.quarkus.entity.c

#Mongodb data sources
quarkus.mongodb.database=mymongodb
quarkus.mongodb.connection-string=mongodb://root:root@localhost:27017/

#The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:29092,localhost:39092

#Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.citizen-in.connector=smallrye-kafka
mp.messaging.incoming.citizen-in.topic=citizens
mp.messaging.incoming.citizen-in.value.serializer=CitizenDeserializer

#Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.citizen-out.connector=smallrye-kafka
mp.messaging.outgoing.citizen-out.topic=citizens
mp.messaging.outgoing.citizen-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

#The AMQP broker location and credentials
amqp-host=localhost
amqp-port=5672
amqp-username=root
amqp-password=root

#Configuring the outgoing channel (writing to ActiveMQ)
mp.messaging.outgoing.citizen-activemq-out.connector=smallrye-amqp
mp.messaging.outgoing.citizen-activemq-out.address=citizens

#Configuring the incoming channel (reading from ActiveMQ)
mp.messaging.incoming.citizen-activemq-in.connector=smallrye-amqp
mp.messaging.incoming.citizen-activemq-in.address=citizens

#Cache item and timeout
quarkus.cache.caffeine.social_security_number.expire-after-write=10s